{"version":3,"sources":["../../src/constants.ts","../../src/util.ts","../../src/index.ts"],"names":["EventName","HIDE","SHOW","ClassName","Selector","OcDefault","createDrawer","hideByEsc","getSelectorFromElement","element","selector","getAttribute","document","querySelectorAll","length","error","Error","OnoffCanvas","[object Object]","options","this","Boolean","classList","isElement","querySelector","config","Object","assign","triggerElements","slice","call","id","addAriaExpanded","forEach","el","addEventListener","event","eventTarget","target","tagName","preventDefault","toggle","drawer","createElement","add","ocNodeList","selectorArr","arrs","divArr","push","selectorArray","newOcArr","filter","elem","index","self","indexOf","attachTo","handle","listen","contains","hide","show","emit","documentElement","appendChild","bind","window","keyCode","remove","removeEventListener","removeChild","evtType","shouldBubble","evt","CustomEvent","bubbles","createEvent","initCustomEvent","dispatchEvent","isOpen","Array","prototype","i","setAttribute"],"mappings":"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","sourcesContent":["import { IOCDefault } from \"./interface\";\n\nexport const NAME = \"onoffcanvas\";\nexport const EVENT_KEY = `.${NAME}`;\n\nexport const EventName = {\n  HIDE: `hide${EVENT_KEY}`,\n  SHOW: `show${EVENT_KEY}`,\n};\n\nexport const ClassName = {\n  SHOW: \"is-open\",\n};\n\nexport const Selector = {\n  DATA_TOGGLE: '[data-toggle=\"onoffcanvas\"]',\n};\n\nexport const OcDefault: IOCDefault = {\n  createDrawer: true,\n  hideByEsc: true,\n};\n\nexport type OnoffCanvasEvents = \"show.onoffcanvas\" | \"hide.onoffcanvas\";\n","export function getSelectorFromElement(element: Element): string | null {\n  let selector = element.getAttribute(\"data-target\");\n  if (!selector || selector === \"#\") {\n    selector = element.getAttribute(\"href\") || \"\";\n  }\n  try {\n    const $selector = document.querySelectorAll(selector);\n    return $selector.length > 0 ? selector : null;\n  } catch (error) {\n    throw new Error(\"Target Not Found!\");\n  }\n}\n\nexport function uniqueArr(arr: any[]): any[] {\n  const uniqueArray = arr.filter((elem, index, self) => index === self.indexOf(elem));\n  return uniqueArray;\n}\n\nexport function selectorArray(arrs: any[]): any[] {\n  const divArr = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for (const element of arrs) {\n    const selector = getSelectorFromElement(element);\n    divArr.push(selector);\n  }\n  return divArr;\n}\n\nexport function isElement(element: unknown): element is Element {\n  return Boolean((element as Element).classList);\n}\n","import {\n  ClassName,\n  EventName,\n  OcDefault,\n  OnoffCanvasEvents,\n  Selector,\n} from \"./constants\";\nimport { IOCDefault } from \"./interface\";\nimport { isElement, selectorArray, uniqueArr } from \"./util\";\n\n/**\n *\n * @export\n * @class OnoffCanvas\n */\nexport default class OnoffCanvas {\n  public static attachTo(\n    element: HTMLElement | string,\n    options?: IOCDefault,\n  ): OnoffCanvas {\n    return new OnoffCanvas(element, options);\n  }\n\n  /**\n   * Auto init all OnoffCanvas elements\n   *\n   * @static\n   * @param {boolean} [escKey]\n   * @memberof OnoffCanvas\n   */\n  public static autoinit(options = OcDefault) {\n    const ocNodeList = document.querySelectorAll(`${Selector.DATA_TOGGLE}`);\n\n    const ocListArr = [].slice.call(ocNodeList);\n\n    const selectorArr = selectorArray(ocListArr);\n\n    const newOcArr = uniqueArr(selectorArr);\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const element of newOcArr) {\n      OnoffCanvas.attachTo(element, options);\n    }\n  }\n\n  public element: Element;\n\n  public config: IOCDefault;\n\n  private triggerElements: Element[];\n\n  private drawer: HTMLDivElement;\n\n  /**\n   * Creates an instance of OnoffCanvas.\n   *\n   * @constructor\n   * @param {Element | string} element\n   * @param {IOCDefault} [options]\n   * @memberof OnoffCanvas\n   */\n  constructor(element: Element | string, options?: IOCDefault) {\n    this.element = isElement(element)\n      ? element\n      : document.querySelector<HTMLElement>(element)!;\n    this.config = { ...OcDefault, ...options };\n\n    this.triggerElements = [].slice.call(\n      document.querySelectorAll<HTMLElement>(\n        `${Selector.DATA_TOGGLE}[href=\"#${this.element.id}\"],\n      ${Selector.DATA_TOGGLE}[data-target=\"#${this.element.id}\"]`,\n      ),\n    );\n\n    this.addAriaExpanded(this.triggerElements);\n\n    this.triggerElements.forEach((el: Element) => {\n      el.addEventListener(\"click\", (event) => {\n        const eventTarget = event.target as Element | null;\n        if (eventTarget && eventTarget.tagName === \"A\") {\n          event.preventDefault();\n        }\n        this.toggle();\n      });\n    });\n\n    this.drawer = document.createElement(\"div\");\n    this.drawer.classList.add(\"onoffcanvas-drawer\");\n  }\n\n  public on(event: OnoffCanvasEvents, handle: EventListener) {\n    this.listen(event, handle);\n    return this;\n  }\n\n  /**\n   * Show/Hide OnoffCanvas element\n   *\n   * @returns {void}\n   * @memberof OnoffCanvas\n   */\n  public toggle(): void {\n    if (this.element.classList.contains(ClassName.SHOW)) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Show OnoffCanvas element\n   *\n   * @returns {void}\n   * @memberof OnoffCanvas\n   */\n  public show(): void {\n    if (this.element.classList.contains(ClassName.SHOW)) {\n      return;\n    }\n    this.element.classList.add(ClassName.SHOW);\n    this.addAriaExpanded(this.triggerElements);\n    this.emit(EventName.SHOW, this.element);\n\n    if (this.config.createDrawer) {\n      document.documentElement.appendChild(this.drawer);\n      this.drawer.classList.add(\"is-open\");\n      this.drawer.addEventListener(\"click\", this.hide.bind(this));\n    }\n\n    if (this.config.hideByEsc) {\n      window.addEventListener(\"keydown\", (event) => {\n        if (event.keyCode === 27) {\n          this.hide();\n        }\n      });\n    }\n  }\n\n  /**\n   * Hide OnoffCanvas element\n   *\n   * @returns {void}\n   * @memberof OnoffCanvas\n   */\n  public hide(): void {\n    if (!this.element.classList.contains(ClassName.SHOW)) {\n      return;\n    }\n\n    if (this.config.createDrawer) {\n      this.drawer.classList.remove(\"is-open\");\n      this.drawer.removeEventListener(\"click\", this.hide.bind(this));\n      document.documentElement.removeChild(this.drawer);\n    }\n\n    this.element.classList.remove(ClassName.SHOW);\n    this.addAriaExpanded(this.triggerElements);\n    this.emit(EventName.HIDE, this.element);\n  }\n\n  private listen(event: string, handle: EventListener) {\n    this.element.addEventListener(event, handle, false);\n    return this;\n  }\n\n  private emit<T extends object>(\n    evtType: string,\n    target: T,\n    shouldBubble = false,\n  ) {\n    let evt;\n    if (typeof CustomEvent === \"function\") {\n      evt = new CustomEvent(evtType, {\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent(\"CustomEvent\");\n      evt.initCustomEvent(evtType, shouldBubble, false, target);\n    }\n\n    this.element.dispatchEvent(evt);\n    return this;\n  }\n\n  private addAriaExpanded(triggerElements: Element[]): void {\n    const isOpen = this.element.classList.contains(ClassName.SHOW);\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Array.prototype.forEach.call(triggerElements, (el, i) => {\n      el.setAttribute(\"aria-expanded\", isOpen ? \"true\" : \"false\");\n    });\n  }\n}\n"]}